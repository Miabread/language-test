export { Point2D, Rectangle, width, height, area, perimeter, center };

import { sonance::prelude::* };

struct Point2D(x: F32, y: F32);

struct Rectangle(
    start: Point2D,
    end: Point2D,
);

func width(self: ref Rectangle) -> F32 {
    subtract(self.start.x, self.end.x) absolute_value()
};

func height(self: ref Rectangle) -> F32 {
    subtract(self.start.y, self.end.y) absolute_value()
};

func area(self: ref Rectangle) -> F32 {
    multiply(self width(), self height())
};

func perimeter(self: ref Rectangle) -> F32 {
    add(self width(), self height()) multiply(2)
};

func center(self: ref Rectangle) -> Point2D {
    Point2D(
        x: add(self.start.x, self.end.x) divide(2.0),
        y: add(self.start.y, self.end.y) divide(2.0),
    )
};
